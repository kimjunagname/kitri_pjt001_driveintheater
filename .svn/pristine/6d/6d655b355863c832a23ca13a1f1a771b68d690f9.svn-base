package com.kitri.project.user.service;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;

import com.kitri.project.sql.CarSql;
import com.kitri.project.user.dto.UserDto;

public class UserDao {
	Connection con = null;
	PreparedStatement pstmt = null;
	Statement stmt;
	ResultSet rs = null;
	CarSql carsql = null;
	UserDto userDto = null;
	List list;

	public static int num = 0;

	public UserDao() {
		carsql = new CarSql();
	}

	public UserDto select(UserDto user) {
		return null;
	}

	public int register(UserDto userDto) {
		return 0;
	}

	public UserDto getUserByName(String name) {
		UserDto user = new UserDto();
		String sql = "SELECT * FROM user_info WHERE user_name= ?";

		try {
			con = carsql.connect();
			pstmt = con.prepareStatement(sql);
			pstmt.setString(1, name);

			rs = pstmt.executeQuery();

			if (rs.next()) {
				user.setUser_id(rs.getString("user_id"));
				user.setUser_pwd(rs.getString("user_pwd"));
				user.setUser_name(rs.getString("user_name"));
				user.setUser_email(rs.getString("user_email"));
				user.setUser_phone(rs.getString("user_phone"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			carsql.close(rs, pstmt, con);
		}

		return user;
	}

	/*
	 * public void insert_user() { String sql=
	 * "INSERT INTO member_info VALUES(user_no_seq.nexval, ?, ?, ?, ?, ?, ?, ?)";
	 * 
	 * try { Connection con= carsql.connect(); //conn= drivemanager pstmt=
	 * con.prepareStatement(sql); pstmt.setString(1, x); pstmt.setString(2, x);
	 * pstmt.setString(3, x); pstmt.setString(4, x); pstmt.setString(5, x);
	 * pstmt.setString(6, x); pstmt.setString(7, x); //받아온 변수 입력(user_no는 자동입력)
	 * 
	 * pstmt.executeUpdate(); } catch (Exception e) { } }
	 */

	// carType 타입 잠시 String을 변환
	// public int modifyUserInfo(String id, String pwd, int carType, String name,
	// String year, String month, String day,
	public int modifyUserInfo(String id, String pwd, String carType, String name, String email, String phone) {

		String sql = "UPDATE user_info SET user_pwd= ?, cartype_name= ?, user_name= ?, user_email= ?, user_phone= ? ";
		sql+= "WHERE user_id= ?";

		try {
			con = carsql.connect();
			pstmt = con.prepareStatement(sql);

			pstmt.setString(1, pwd);
			pstmt.setString(2, carType);
			pstmt.setString(3, name);
			pstmt.setString(4, email);
			pstmt.setString(5, phone);
			pstmt.setString(6, id);
			
			num = pstmt.executeUpdate();

		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			carsql.close(pstmt, con);
		}

		return num;
	}
	
//	maSuchId
  public UserDto maSuchId(String name) {
//  public UserDto login(UserDto userDto) {
    System.out.println("DAO - Dto : "+ name);
    //UserDto userDto
       try {
      con = carsql.connect();
      // DriverManager 객체로부터 Connection 객체를 얻어온다.
      String sql = ""; //string sql 변수 선언
      sql += " select USER_INFO.USER_ID, TICKET_PAY.USER_NO, TO_char(TICKET_PAY.MOVIE_PALYDATE, 'YYYY-MM-DD HH24:MI') as MOVIE_PALYDATE , \n";
      sql += " MOVIE_INFO.MOVIE_TITLE, BRANCH.BRANCH_NAME, TICKET_PAY.TICKET_PAYCASH, \n";
      sql += " TICKET_PAY.TICKET_PAYMILEAGE, TICKET_PAY.TICKET_PAYTOTAL \n"; //선택
      sql += " from USER_INFO, MOVIE_INFO, BRANCH, TICKET_PAY \n"; //프롬 멤버 테이블
      sql += " where TICKET_PAY.USER_NO = USER_INFO.USER_NO \n";
      sql += " and TICKET_PAY.BRANCH_NO = BRANCH.BRANCH_NO \n";
      sql += " and TICKET_PAY.MOVIE_NO = MOVIE_INFO.MOVIE_NO \n";
      sql += " and USER_INFO.USER_name = ? ";
      
      pstmt = con.prepareStatement(sql); //prepareStatement에서 해당 sql을 미리 컴파일한다.
      System.out.println("pstmt 검증: " + pstmt);
      pstmt.setString(1, name); //1값에 id를 
      rs = pstmt.executeQuery();  // 쿼리를 실행하고 결과를 ResultSet 객체에 담는다.
   
      if(rs.next()) {
        // 결과를 한 행씩 돌아가면서 가져온다.
        userDto = new UserDto(); //MemberDto 의 memberDto 객체 생성
        userDto.setaUSER_ID(rs.getString("USER_ID"));  //memberDto에 name 값 가져오기
        userDto.setaUSER_NO(rs.getInt("USER_NO")); //memberDto에 id 값 가져오기
        userDto.setaMOVIE_PALYDATE(rs.getString("MOVIE_PALYDATE")); //memberDto에 id 값 가져오기
//        java.sql.Date movie_PalyDate = rs.getDate("MOVIE_PALYDATE");
//        userDto.setaMOVIE_PALYDATE("movie_PalyDate");  //memberDto에 name 값 가져오기
        userDto.setaMOVIE_TITLE(rs.getString("MOVIE_PALYDATE"));
        userDto.setaMOVIE_TITLE(rs.getString("MOVIE_TITLE")); //memberDto에 id 값 가져오기
        userDto.setaBRANCH_NAME(rs.getString("BRANCH_NAME"));  //memberDto에 name 값 가져오기
        userDto.setaTICKET_PAYCASH(rs.getInt("TICKET_PAYCASH"));  //memberDto에 name 값 가져오기
        userDto.setaTICKET_PAYMILEAGE(rs.getInt("TICKET_PAYMILEAGE"));  //memberDto에 name 값 가져오기
        userDto.setaTICKET_PAYTOTAL(rs.getInt("TICKET_PAYTOTAL"));  //memberDto에 name 값 가져오기
      }  
      System.out.println("dao : " + userDto.getaUSER_ID()+ "" 
                                  + userDto.getaUSER_NO()+ ""
                                  + userDto.getaMOVIE_PALYDATE()+ ""
                                  + userDto.getaMOVIE_TITLE()+ ""
                                  + userDto.getaBRANCH_NAME()+ ""
                                  + userDto.getaTICKET_PAYCASH()+ "" 
                                  + userDto.getaTICKET_PAYMILEAGE()+ "" 
                                  + userDto.getaTICKET_PAYTOTAL());
      
    } catch (SQLException e) {// 예외가 발생하면 예외 상황을 처리한다.
      e.printStackTrace();
    } finally {
      carsql.close(rs, pstmt, con);
      System.out.println(userDto.getUser_id() + userDto.getUser_pwd() + userDto.getUser_name());
    } 
    return userDto;  //return memberDto;반환
  } 
}